{"version":3,"sources":["components/NotFound.js","components/Forbidden.js","components/UnhandleError.js","components/Form.js","components/UserSignIn.js","components/UserSignUp.js","components/Course.js","components/NewCourse.js","components/Courses.js","config.js","Data.js","components/CourseDetail.js","components/UpdateCourse.js","components/CreateCourse.js","Context.js","PrivateRoute.js","App.js","components/Header.js","components/UserSignOut.js","serviceWorker.js","index.js"],"names":["className","props","cancel","errors","submit","submitButtonText","elements","ErrorsDisplay","onSubmit","event","preventDefault","type","onClick","errorsDisplay","length","map","error","i","key","UserSignIn","state","emailAddress","password","change","name","target","value","setState","context","from","location","pathname","actions","signIn","then","user","console","log","firstName","lastName","history","push","catch","status","message","this","Form","Fragment","id","onChange","placeholder","to","Component","UserSignUp","confirmPassword","a","data","createUser","statusCode","Course","course","title","NewCourse","version","xmlns","x","y","viewBox","points","Courses","courses","getCourses","components","Data","path","method","body","requiresAuth","credentials","url","config","options","headers","JSON","stringify","encodedCredentials","btoa","fetch","api","response","json","Error","handlePageError","code","get","CourseDetail","createdBy","deleteCourse","authenticatedUser","getCourse","match","params","enableActions","description","estimatedTime","materialsNeeded","UpdateCourse","userId","updateCourse","goBack","CreateCourse","createCourse","Context","React","createContext","Provider","Cookies","getJSON","getUser","set","expires","signOut","remove","children","Consumer","withContext","component","rest","render","HeaderWithContext","authUser","UserSignInWithContext","UserSignUpWithContext","UserSignOutWithContext","useEffect","CoursesWithContext","CoursesDetailWithContext","UpdateCourseWithContext","CreateCourseWithContext","App","exact","PrivateRoute","Forbidden","UnhandledError","NotFound","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4935c02d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => (\n  <div className=\"bounds\">\n    <h1>Not Found</h1>\n    <p>Sorry! We couldn't find the page you're looking for.</p>\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div className=\"bounds\">\n    <h1>Forbidden</h1>\n    <p>Oh oh! You can't access this page.</p>\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div className=\"bounds\">\n    <h1>Error</h1>\n    <p>Sorry! We just encountered an unexpected error.</p>\n  </div>\n);\n","import React from 'react';\n\nexport default (props) => {\n  const {\n    cancel,\n    errors,\n    submit,\n    submitButtonText,\n    elements,\n  } = props;\n\n  /**\n   * Handle on submit form event to call parent's submit function\n   * @param {Object} event \n   */\n  function handleSubmit(event) {\n    event.preventDefault();\n    submit();\n  }\n\n  /**\n   * Handle cancel form event to call parent's cancel function\n   * @param {Object} event \n   */\n  function handleCancel(event) {\n    event.preventDefault();\n    cancel();\n  }\n\n  return (\n    <div>\n      {/* For validation errors */}\n      <ErrorsDisplay errors={errors} />\n      <form onSubmit={handleSubmit}>\n        {/* elements passed from parent component */}\n        {elements()}\n        {/* Buttons for on submit and cancel form */}\n        <div className=\"pad-bottom\">\n          <button className=\"button\" type=\"submit\">{submitButtonText}</button>\n          <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n/**\n * Stateless component to show validation errors \n * @param {Array} param0 \n */\nfunction ErrorsDisplay({ errors }) {\n  let errorsDisplay = null;\n\n  if (errors.length) {\n    errorsDisplay = (\n      <div>\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\n        <div className=\"validation-errors\">\n          <ul>\n            {errors.map((error, i) => <li key={i}>{error}</li>)}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  return errorsDisplay;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\nexport default class UserSignIn extends Component {\n  state = {\n    emailAddress: '',\n    password: '',\n    errors: [],\n  }\n\n  /**\n   * Inputs on change handler to manage values\n   * @param {Object} event \n   */\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n  \n  /**\n   * On submit form to sig in user with credentials and redirect to last private route or homepage\n   */\n  submit = () => {\n    const { context } = this.props\n    const { emailAddress, password } = this.state\n    // if redirected from private route or not\n    const { from } = this.props.location.state || { from: { pathname: '/'} }\n    context.actions.signIn(emailAddress, password)\n      .then( user => {\n        console.log(`SUCCESS! ${user.firstName} ${user.lastName} is now signed in!`)\n        // if correct sign in redirect to private route or homepage\n        this.props.history.push(from)\n      })\n      .catch( error => {\n        if (error.status) {\n          // no user, show wvalidations errors\n          this.setState(() => {\n            return {errors: [error.message]}\n          })\n        } else {\n          // no Ok redirect to error page of convenience\n          this.props.history.push(error.message)\n        }\n      })\n  }\n\n  /**\n   * If user cancel redirect to homepage\n   */\n  cancel = () => {\n    this.props.history.push('/')\n  }\n\n  render() {\n    const {\n      emailAddress,\n      password,\n      errors,\n    } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign In</h1>\n          <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Sign In\"\n            elements={() => (\n              <React.Fragment>\n                <input \n                  id=\"emailAddress\" \n                  name=\"emailAddress\" \n                  type=\"text\"\n                  value={emailAddress} \n                  onChange={this.change} \n                  placeholder=\"Email Address\" />\n                <input \n                  id=\"password\" \n                  name=\"password\"\n                  type=\"password\"\n                  value={password} \n                  onChange={this.change} \n                  placeholder=\"Password\" />              \n              </React.Fragment>\n            )} />\n          <p>\n            Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!\n          </p>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\nexport default class UserSignUp extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    emailAddress: \"\",\n    password: '',\n    confirmPassword: \"\",\n    errors: [],\n  }\n\n    /**\n   * Inputs on change handler to manage values\n   * @param {Object} event \n   */\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  /**\n   * On submit form to create and sign in user\n   */\n  submit = async () => {\n    const { context } = this.props\n    // Get user info\n    const { firstName, lastName, emailAddress, password, confirmPassword} = this.state;\n      // Assign user object\n      const user = { firstName, lastName, emailAddress, password, confirmPassword}\n      // request to create new user to api\n      await context.data.createUser(user)\n        .then( () => {\n            // sign in user and redirect to homepage\n            console.log(`${user.firstName} ${user.lastName} is successfully signed up and authenticated`)\n            context.actions.signIn(emailAddress, password)\n              .then(() => {\n                this.props.history.push('/')\n              })\n          }\n        )\n        .catch( error => {\n          // Show validation errors if there are\n          if (error.statusCode) {\n            this.setState({errors: error.errors})\n          } else {\n          // Redirect to error page of convenience \n          this.props.history.push(error.message)\n          }\n        })\n      // }\n  }\n\n  /**\n   * If user cancel redirect to homepage\n   */\n  cancel = () => {\n    this.props.history.push('/')\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n      confirmPassword,\n      errors,\n    } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Sign Up\"\n            elements={() => (\n              <React.Fragment>\n                <input \n                  id=\"firstName\" \n                  name=\"firstName\" \n                  type=\"text\"\n                  value={firstName} \n                  onChange={this.change} \n                  placeholder=\"First Name\" />\n                <input \n                  id=\"lastName\" \n                  name=\"lastName\" \n                  type=\"text\"\n                  value={lastName} \n                  onChange={this.change} \n                  placeholder=\"Last Name\" />\n                <input \n                  id=\"emailAddress\" \n                  name=\"emailAddress\" \n                  type=\"text\"\n                  value={emailAddress} \n                  onChange={this.change} \n                  placeholder=\"Email Address\" />\n                <input \n                  id=\"password\" \n                  name=\"password\"\n                  type=\"password\"\n                  value={password} \n                  onChange={this.change} \n                  placeholder=\"Password\" />  \n                <input \n                  id=\"confirmPassword\" \n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  value={confirmPassword} \n                  onChange={this.change} \n                  placeholder=\"Confirm Password\" />  \n              </React.Fragment>\n            )} />\n          <p>\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!\n          </p>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst  Course =  props => (\n    <div className=\"grid-33\">\n        <Link className=\"course--module course--link\" to={\"/courses/\" + props.course.id}>            \n            <h4 className=\"course--label\">Course</h4>\n            <h3 className=\"course--title\">{props.course.title}</h3>\n        </Link>\n    </div>\n    )\n\nexport default Course\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst  NewCourse =  props => (\n    <div className=\"grid-33\">\n        <Link className=\"course--module course--add--module\" to=\"/courses/create\">            \n            <h3 className=\"course--add--title\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n            viewBox=\"0 0 13 13\" className=\"add\">\n            <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n            </svg>New Course</h3>\n        </Link>\n    </div>\n    )\n\nexport default NewCourse","import React, { Component } from 'react';\nimport Course from './Course'\nimport NewCourse from './NewCourse'\n\nexport default class Courses extends Component {\n\n  state = {\n    courses: []\n  }\n\n  componentDidMount() {\n    // Get courses from api\n    this.getCourses()\n  }\n\n  render() {\n    return (\n      <div className=\"bounds\">\n        {this.state.courses}\n      </div>\n    );\n  }\n\n  /**\n   * Async function call and manage response or error on fetching\n   */\n  getCourses = async () => {\n    const { context } = this.props\n    let components =[]\n\n    await context.data.getCourses()\n      .then(courses => {\n        // Array with Course component of every course\n        components = courses.map( course => <Course course={course} key={course.id}/>)\n        // Last, push for create course, NewCourse component\n        components.push(<NewCourse key=\"newcourse\"/>)\n        this.setState(() => {\n          return {courses: components}\n        })\n      })\n      .catch(error => {\n        console.error(error.message)\n        // Redirect to error page of convenience \n        this.props.history.push(error.message)\n      })\n  }\n}\n","// URL api express\nexport default {\n  apiBaseUrl: 'https://restapimikeliam.herokuapp.com/api',\n};\n","import config from './config';\n\nexport default class Data {\n  /**\n   * Create request to api and return response\n   * @param {String} path Uri to request\n   * @param {String} method action to request\n   * @param {Object} body for put post methods\n   * @param {Boolean} requiresAuth if credentials needed at headers request\n   * @param {Object} credentials email/password\n   */\n  api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\n    const url = config.apiBaseUrl + path;\n  \n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {\n      const encodedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`)\n\n      options.headers['Authorization'] = `Basic ${encodedCredentials}`\n    }\n\n    return fetch(url, options);\n  }\n  /**\n   * Asd for user and return user's credentials\n   * @param {String} emailAddress \n   * @param {String} password \n   */\n  async getUser(emailAddress, password) {\n    const response = await this.api(`/users`, 'GET', null, true, { emailAddress, password});\n    if (response.status === 200) {\n      return response.json().then(data => data.user);\n    } else if (response.status === 401) { // access denied to show validation errors\n      const error = new Error(await response.json().then(data => data.message))\n      error.status = response.status\n      throw  error;\n    }\n    else {\n      throw new Error(this.handlePageError(response.status));\n    }\n  }\n  \n  /**\n   * Send credentials to create a new user\n   * @param {Object} user \n   */\n  async createUser(user) {\n    const response = await this.api('/users', 'POST', user);\n    const code = response.status\n    if (code === 201) {\n      return [];\n    }\n    else{\n      const error = await response.json().then(data => data)\n      if (code === 400 || code === 500) { // bad request to show validation errors\n        error.statusCode = response.status;\n        // if existing emailaddres error (code 500 + error field)\n        if (error.error) {\n          error.errors = [error.message]\n        }\n        throw  error;\n      } else {\n        throw new Error(this.handlePageError(response.status));\n      }\n    }\n  }\n\n  /**\n   * Request all courses availables\n   */\n  async getCourses() {\n    const response = await this.api(`/courses`, 'GET', null);\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    }\n    else { \n      throw new Error(this.handlePageError(response.status));\n    }\n  }\n\n  /**\n   * Return course with id from api\n   * @param {integer} id \n   */\n  async getCourse(id) {\n    const response = await this.api(`/courses/${id}`, 'GET', null);\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    }\n    else {\n      throw new Error(this.handlePageError(response.status));\n    }\n  }\n  \n  /**\n   * Request to create a new course with user authenticated credentials\n   * @param {Object} course \n   * @param {String} emailAddress \n   * @param {String} password \n   */\n  async createCourse(course, emailAddress, password) {\n    const response = await this.api('/courses', 'POST', course, true, { emailAddress, password });\n    if (response.status === 201) {\n      return {message: \"Course created\", location: response.headers.get(\"Location\")};\n    }\n    else if (response.status === 400) { // bad request to show validation errors\n      const error = await response.json().then(data => data.error)\n      throw  error;\n    }\n    else {\n      throw new Error(this.handlePageError(response.status));\n    }\n  }\n\n  /**\n   * Request to update a course with id and with user authenticated credentials\n   * @param {Integer} id \n   * @param {Object} course \n   * @param {String} emailAddress \n   * @param {String} password \n   */\n  async updateCourse(id , course, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, 'PUT', course, true, { emailAddress, password });\n    if (response.status === 204) {\n      return {location: `/courses/${id}`};\n    }\n    else if (response.status === 400 || response.status === 401) { // bad request or acces denied to show validation errors\n      const error = await response.json().then(data => data.error)\n      throw  error;\n    }\n    else {\n      throw new Error(this.handlePageError(response.status));\n    }\n  }\n\n  /**\n   * Request to delete a course with id and with user authenticated credentials\n   * @param {Integer} id \n   * @param {String} emailAddress \n   * @param {String} password \n   */\n  async deleteCourse(id, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, 'DELETE', null, true, { emailAddress, password });\n    if (response.status === 204) {\n      const message = `Course ${id} deleted correctly`\n      return message\n    }\n    else if (response.status === 400 || response.status === 401) { // bad request or acces denied to show validation errors\n      const error = await response.json().then(data => data.error)\n      throw  error;\n    }\n    else {\n      throw new Error(this.handlePageError(response.status));\n    }\n  }\n\n  /**\n   * Error handler return path depending on response's status code\n   * @param {Integer} statusCode \n   */\n  handlePageError(statusCode) {\n    const code = statusCode\n    if (code === 500) {\n      return \"/error\"\n    } else if (code === 403 ){\n        return \"/forbidden\"\n      } else if (code === 404) {\n          return \"/notfound\"\n    }\n  }\n\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Data from '../Data'\nimport ReactMarkdown from 'react-markdown'\nexport default class CourseDetail extends Component {\n\n  state = {\n    course: {},\n    createdBy:{},\n    message: null\n  }\n\n  constructor() {\n    super();\n    this.data = new Data();\n  }\n\n  componentDidMount() {\n    // Get course with id and set in state\n    this.getCourse(this.props.match.params.id)\n        .then((course) => {\n            this.setState(() => {\n                return {course, createdBy: course.createdBy}\n              })\n        })\n        .catch((error) => {\n            // Redirect to error page of convenience\n            this.props.history.push(error.message)\n        })\n\n  }\n\n  /**\n   * Get course with id from api\n   * @param {Integer} id \n   */\n  async getCourse(id) {\n    return await this.data.getCourse(id)\n        .then(course => course)        \n  }\n\n  /**\n   * Request for delete a course with id\n   */\n   deleteCourse = async () => {\n       // If there is an user authenticated\n       if (this.props.context.authenticatedUser) {\n           // get credentials\n            const {emailAddress, password} = this.props.context.authenticatedUser\n            // request for delete\n            await this.data.deleteCourse(this.state.course.id, emailAddress, password)\n            .then(message => {\n                console.log(message)\n                // if OK redirect to home page\n                this.props.history.push(\"/\")\n            })\n            .catch(error => {        \n                if (error.status) {\n                    this.setState(() => {\n                    return {errors: [error.message]}\n                    })\n                } else {\n                    // no OK Redirect to error page of convenience\n                    this.props.history.push(error.message)\n                }\n            })\n       } else {\n           // else redirect for user to sig in\n           this.props.history.push('/signin')\n       }\n  }\n\n  render() {\n      // Variable to control if there is an user authenticated and the course owner's id coincides with the user authenticated\n      const enableActions = (this.props.context.authenticatedUser && (this.props.context.authenticatedUser.id === this.state.createdBy.id) )\n    return (\n        <div>\n            <div className=\"actions--bar\">\n                <div className=\"bounds\">\n                    <div className=\"grid-100\">\n                        {\n                            // If true show update and delete course button\n                            enableActions\n                            ? (                        \n                            <span>\n                                <Link className=\"button\" to={\"/courses/\" + this.state.course.id + \"/update\"}>Update Course</Link>\n                                <Link className=\"button\" to=\"#\" onClick={this.deleteCourse}>Delete Course</Link>\n                            </span>\n                            )\n                            : null\n                       }\n                        <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"bounds course--detail\">\n                <div className=\"grid-66\">\n                    <div className=\"course--header\">\n                    <h4 className=\"course--label\">Course</h4>\n                    <h3 className=\"course--title\">{this.state.course.title}</h3>\n                    <p>By {this.state.createdBy.firstName} {this.state.createdBy.lastName}</p>\n                </div>\n                {/* Added support for rendereing markdown formatted text */}\n                <ReactMarkdown className=\"course--description\">\n                    {this.state.course.description}\n                </ReactMarkdown> \n            </div>\n            <div className=\"grid-25 grid-right\">\n                <div className=\"course--stats\">\n                    <ul className=\"course--stats--list\">\n                        <li className=\"course--stats--list--item\">\n                        <h4>Estimated Time</h4>\n                        <h3>{this.state.course.estimatedTime}</h3>\n                        </li>\n                        <li className=\"course--stats--list--item\">\n                        <h4>Materials Needed</h4>\n                        <ul>\n                            {/* Added support for rendereing markdown formatted text */}\n                            <ReactMarkdown>\n                                {this.state.course.materialsNeeded}\n                            </ReactMarkdown> \n                        </ul>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport Data from '../Data'\nimport Form from './Form'\n\nexport default class UpdateCourse extends Component {\n\n  state = {\n    title: \"\",\n    description: \"\",\n    estimatedTime: \"\",\n    materialsNeeded: \"\",\n    userId: null,\n    createdBy: {},\n    errors:[]\n  }\n\n  constructor() {\n    super();\n    this.data = new Data();\n  }\n  componentDidMount() {\n    // Get course with id \n    this.getCourse(this.props.match.params.id)\n      .then( course => {\n        // if course owner's id coincide with user authenticated id\n        if (course.createdBy.id === this.props.context.authenticatedUser.id) {\n          this.setState(() => {\n            return {\n              title: course.title, \n              description: course.description, \n              estimatedTime: course.estimatedTime || \"\", \n              materialsNeeded: course.materialsNeeded || \"\", \n              userId: course.userId,\n              createdBy: course.createdBy}\n          })\n        } else {\n          // no coincide redirect to forbidden page\n          this.props.history.push('/forbidden')\n        }\n      })\n      .catch((error) => {\n        // Redirect to error page of convenience \n        this.props.history.push(error.message)\n      })\n  }\n\n  /**\n   * Request course with id from api\n   * @param {Integer} id \n   */\n  async getCourse(id) {\n     return await this.data.getCourse(id).then(course => course)\n  }\n\n  /**\n   * Inputs on change handler to manage values\n   * @param {Object} event \n   */\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  /**\n   * On Submit form event to request to update course with values\n   */\n  submit = () => {\n    const {         \n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      userId\n    } = this.state;\n    // Setting course object with values from state after set from inputs adding user id\n    const course = {title, description, estimatedTime, materialsNeeded, userId}\n    // Get credentials\n    const {emailAddress, password} = this.props.context.authenticatedUser\n\n    this.data.updateCourse(this.props.match.params.id, course, emailAddress, password)\n      .then( response => {\n            this.props.history.push(response.location)\n      })\n      .catch( error => {\n        // if error has status code\n        if (error.status) {\n          // set validation errors\n          this.setState(() => {\n            return {errors: [error.message]}\n          })\n        } else {\n          // else Redirect to error page of convenience \n          this.props.history.push(error.message)\n        }\n      })\n  }\n  /**\n   * If user cancel redirect to homepage\n   */\n  cancel = () => {\n    this.props.history.goBack()\n  }\n\n  render() {\n    const {\n        errors,\n        title,\n        description,\n        estimatedTime,\n        materialsNeeded,\n      } = this.state;\n    return (\n    <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n        <div>\n        <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Update Course\"\n            elements={() => (\n              <React.Fragment>\n                <div className=\"grid-66\">\n                  <div className=\"course--header\">\n                    <h4 className=\"course--label\">Course</h4>\n                    <div>\n                      <input \n                      id=\"title\" \n                      name=\"title\" \n                      type=\"text\" \n                      className=\"input-title course--title--input\" \n                      placeholder=\"Course title...\"\n                      value={title}\n                      onChange={this.change}  />\n                    </div>\n                    <p>By {this.state.createdBy.firstName} {this.state.createdBy.lastName}</p>\n                  </div>\n                  <div className=\"course--description\">\n                    <div>\n                      <textarea \n                        id=\"description\" \n                        name=\"description\" \n                        className=\"\" \n                        placeholder=\"Course description...\"\n                        value={description}\n                        onChange={this.change} >\n                      </textarea>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"grid-25 grid-right\">\n                  <div className=\"course--stats\">\n                    <ul className=\"course--stats--list\">\n                      <li className=\"course--stats--list--item\">\n                        <h4>Estimated Time</h4>\n                        <div>\n                          <input \n                            id=\"estimatedTime\" \n                            name=\"estimatedTime\" \n                            type=\"text\" \n                            className=\"course--time--input\"\n                            placeholder=\"Hours\" \n                            value={estimatedTime} \n                            onChange={this.change} />\n                          </div>\n                      </li>\n                      <li className=\"course--stats--list--item\">\n                        <h4>Materials Needed</h4>\n                        <div>\n                          <textarea \n                            id=\"materialsNeeded\" \n                            name=\"materialsNeeded\" \n                            className=\"\" \n                            placeholder=\"List materials...\"\n                            value={materialsNeeded}\n                            onChange={this.change} >\n                              \n                          </textarea>\n                          </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </React.Fragment>\n            )} />\n        </div>\n    </div>\n    );\n  }\n\n\n}","import React, { Component } from 'react';\nimport Data from '../Data'\nimport Form from './Form'\n\nexport default class CreateCourse extends Component {\n\n  state = {\n    title: \"\",\n    description: \"\",\n    estimatedTime: \"\",\n    materialsNeeded: \"\",\n    user: {},\n    message: null,\n    errors:[]\n  }\n\n  constructor() {\n    super();\n    this.data = new Data();\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n        return {user: this.props.context.authenticatedUser}\n    })\n  }\n\n  /**\n   * Inputs on change handler to manage values\n   * @param {Object} event \n   */\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  /**\n   * On Submit form event to request to create new course with values\n   */\n  submit = () => {\n    const {         \n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      user\n    } = this.state;\n    // Setting course object with values from state after set from inputs adding user id\n    const course = {title, description, estimatedTime, materialsNeeded, userId: user.id}\n    // Get credentials to authentication request\n    const {emailAddress, password} = user\n\n    this.data.createCourse(course, emailAddress, password)\n      .then( response => {\n            console.log(response.message)\n            // if OK redirect to course location on response header\n            this.props.history.push(response.location)\n      })\n      .catch( error => {\n        if (error.status) {\n          // no OK validations errors\n          this.setState(() => {\n            return {errors: error.message}\n          })\n        } else {\n          // no Ok redirect to error page of convenience\n          this.props.history.push(error.message)\n        }\n      })\n  }\n\n  /**\n   * If user cancel redirect to homepage\n   */\n  cancel = () => {\n    this.props.history.push('/')\n  }\n\n  render() {\n    const {\n        errors,\n        title,\n        description,\n        estimatedTime,\n        materialsNeeded,\n      } = this.state;\n    return (\n    <div className=\"bounds course--detail\">\n        <h1>Create Course</h1>\n        <div>\n        <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Create Course\"\n            elements={() => (\n              <React.Fragment>\n                <div className=\"grid-66\">\n                  <div className=\"course--header\">\n                    <h4 className=\"course--label\">Course</h4>\n                    <div>\n                      <input \n                      id=\"title\" \n                      name=\"title\" \n                      type=\"text\" \n                      className=\"input-title course--title--input\" \n                      placeholder=\"Course title...\"\n                      value={title}\n                      onChange={this.change}  />\n                    </div>\n                    <p>By {this.state.user.firstName} {this.state.user.lastName}</p>\n                  </div>\n                  <div className=\"course--description\">\n                    <div>\n                      <textarea \n                        id=\"description\" \n                        name=\"description\" \n                        className=\"\" \n                        placeholder=\"Course description...\"\n                        value={description}\n                        onChange={this.change} >\n                      </textarea>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"grid-25 grid-right\">\n                  <div className=\"course--stats\">\n                    <ul className=\"course--stats--list\">\n                      <li className=\"course--stats--list--item\">\n                        <h4>Estimated Time</h4>\n                        <div>\n                          <input \n                            id=\"estimatedTime\" \n                            name=\"estimatedTime\" \n                            type=\"text\" \n                            className=\"course--time--input\"\n                            placeholder=\"Hours\" \n                            value={estimatedTime} \n                            onChange={this.change} />\n                          </div>\n                      </li>\n                      <li className=\"course--stats--list--item\">\n                        <h4>Materials Needed</h4>\n                        <div>\n                          <textarea \n                            id=\"materialsNeeded\" \n                            name=\"materialsNeeded\" \n                            className=\"\" \n                            placeholder=\"List materials...\"\n                            value={materialsNeeded}\n                            onChange={this.change} >\n                              \n                          </textarea>\n                          </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </React.Fragment>\n            )} />\n        </div>\n    </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport Data from \"./Data\";\nimport Cookies from 'js-cookie'\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n\n    state= {\n        authenticatedUser: Cookies.getJSON('authenticatedUser') || null // if there was authenticated user previous refresh etc\n    }\n\n    constructor() {\n        super()\n        this.data = new Data()\n    }\n\n    render() {\n        const { authenticatedUser } = this.state\n        const value = {\n            authenticatedUser,\n            data: this.data,\n            actions: {\n                signIn: this.signIn,\n                signOut: this.signOut\n            }\n        }\n        return (\n            <Context.Provider value={value}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n\n    /**\n     * Check if user exist and are valid credentials\n     * @param {String} emailAddress \n     * @param {String} password \n     */\n    signIn = async (emailAddress, password) => {\n       return await this.data.getUser(emailAddress, password)\n            .then( user => {\n                    user.password = password // Only for develepment purpose to persist session\n                    Cookies.set('authenticatedUser', JSON.stringify(user), { expires: 1 })\n                    // user.password = password // For production to not maintain password at cookies\n                    this.setState(() => {\n                        return { authenticatedUser: user}\n                    })\n                    return user\n            })\n            .catch(error => {\n                throw error\n            })\n    }\n    \n    /**\n     * Delete all persisted credentials\n     */\n    signOut = () => {\n        Cookies.remove('authenticatedUser')\n        this.setState(() => {\n            return {authenticatedUser: null}\n        })\n\n    }\n}\n\nexport const Consumer = Context.Consumer\n\n/**\n * A higher-order component that wraps the provided component in a Context Consumer component.\n * @param {class} Component - A React component.\n * @returns {function} A higher-order component.\n */\n\n export default function withContext(Component) {\n     return function ContextComponent(props) {\n         return (\n             <Context.Consumer>\n                 {context=> <Component {...props} context={context} />}\n             </Context.Consumer>\n         )\n     }\n }","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Consumer } from './Context';\n\nexport default ({ component: Component, ...rest }) => {\n  return (\n    <Consumer>\n      { context => (\n        <Route\n          {...rest}\n          render={props => context.authenticatedUser ? (\n              <Component {...props} />\n            ) : (\n              <Redirect to={{\n                pathname: '/signin',\n                state: { from: props.location } \n              }}/>\n            )\n          }\n        />\n      )}\n    </Consumer>\n  );\n};","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n// Stateless components\nimport Header from './components/Header';\nimport NotFound from './components/NotFound'\nimport Forbidden from './components/Forbidden'\nimport UnhandledError from './components/UnhandleError'\nimport UserSignOut from './components/UserSignOut';\n// Statefull components\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport Courses from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport UpdateCourse from './components/UpdateCourse'\nimport CreateCourse from './components/CreateCourse'\n// HO Components for context and authenticated routes\nimport withContext from './Context';\nimport PrivateRoute from './PrivateRoute'\n// Components consuming context\nconst HeaderWithContext = withContext(Header)\nconst UserSignInWithContext = withContext(UserSignIn)\nconst UserSignUpWithContext = withContext(UserSignUp)\nconst UserSignOutWithContext = withContext(UserSignOut)\nconst CoursesWithContext = withContext(Courses)\nconst CoursesDetailWithContext = withContext(CourseDetail)\nconst UpdateCourseWithContext = withContext(UpdateCourse)\nconst CreateCourseWithContext = withContext(CreateCourse)\n\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n      <HeaderWithContext />\n\n      <Switch>\n        <Route exact path=\"/\" component={CoursesWithContext} />\n        <Route path=\"/signin\" component={UserSignInWithContext} />\n        <Route path=\"/signup\" component={UserSignUpWithContext} />\n        <Route path=\"/signout\" component={UserSignOutWithContext} />\n        <PrivateRoute exact path=\"/courses/create\" component={CreateCourseWithContext} />\n        <Route exact path=\"/courses/:id\" component={CoursesDetailWithContext} />\n        <PrivateRoute path=\"/courses/:id/update\" component={UpdateCourseWithContext} />\n        <Route path=\"/forbidden\" component={Forbidden} />\n        <Route path=\"/error\" component={UnhandledError} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header({context}) {\n  // Variable to control if there is an user authenticated to show differents options of links\n    const authUser = context.authenticatedUser\n  return (\n    <div className=\"header\">\n      <div className=\"bounds\">\n        <Link className=\"header--logo\" to=\"/\">Courses</Link>\n        <nav>\n          {\n            authUser ? \n            <React.Fragment>\n              <span>Welcome, {authUser.firstName} {authUser.lastName}!</span>\n              <Link className=\"signout\" to=\"/signout\">Sign Out</Link>\n            </React.Fragment>\n          :\n            <React.Fragment>\n              <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\n              <Link className=\"signin\" to=\"/signin\">Sign In</Link>\n            </React.Fragment>\n            }\n        </nav>\n      </div>\n    </div>\n  );\n};","import React, { useEffect} from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default ({context}) => {\n  useEffect(() => context.actions.signOut())\n  return (\n    <Redirect to=\"/\" />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from './Context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}